# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-10 11:37
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djorm_pgarray.fields
import image_cropping.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('commented_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsByUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Comments')),
            ],
        ),
        migrations.CreateModel(
            name='CoverPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_photo_path', models.TextField()),
                ('cover_photo', models.ImageField(upload_to=b'media')),
                ('uploaded_on', models.DateTimeField()),
                ('key', models.CharField(max_length=90)),
            ],
        ),
        migrations.CreateModel(
            name='DailyPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_path', models.TextField()),
                ('photo', models.ImageField(upload_to=b'media')),
                ('moods', models.CharField(max_length=20, null=True)),
                ('heading', models.TextField(null=True)),
                ('story', models.TextField(null=True)),
                ('no_of_views', models.CharField(max_length=255)),
                ('uploaded_on', models.DateField(null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=90)),
            ],
        ),
        migrations.CreateModel(
            name='FeedView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_of', djorm_pgarray.fields.ArrayField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('daily_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.DailyPhoto')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_viewed', models.BooleanField(default=False)),
                ('time_of', models.DateTimeField(auto_now_add=True)),
                ('comments', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Comments')),
                ('daily_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.DailyPhoto')),
                ('friend_request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.FriendRequest')),
                ('likes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Likes')),
            ],
        ),
        migrations.CreateModel(
            name='OnePhoto',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('daily_photo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.DailyPhoto')),
            ],
        ),
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends_visibility', models.CharField(default=b'F', max_length=1)),
                ('cover_photos_visibility', models.CharField(default=b'A', max_length=1)),
                ('profile_photos_visibility', models.CharField(default=b'F', max_length=1)),
                ('daily_photos_visibility', models.CharField(default=b'F', max_length=1)),
                ('stories_visibility', models.CharField(default=b'F', max_length=1)),
                ('calendar_visibility', models.CharField(default=b'F', max_length=1)),
                ('who_can_comment_on_photos', models.CharField(default=b'F', max_length=1)),
                ('who_can_like_photos', models.CharField(default=b'F', max_length=1)),
                ('is_sharing_of_photos_on_fb', models.CharField(default=b'N', max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(max_length=1)),
                ('dob', models.DateField(null=True)),
                ('city', models.CharField(max_length=99, null=True)),
                ('country', models.CharField(max_length=99, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('last_edited_on', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', image_cropping.fields.ImageCropField(upload_to=b'profile_photo/')),
                ('cropping', image_cropping.fields.ImageRatioField(b'profile_photo', '220x196', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='cropping')),
                ('uploaded_on', models.DateTimeField(null=True)),
                ('is_set', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=90)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.DailyPhoto')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField()),
                ('written_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testimonial', models.TextField()),
                ('written_on', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=90)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials_author', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='notifications',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='likes',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='friends',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='friendrequest',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendrequest_recipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='friendrequest',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendrequest_sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dailyphoto',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coverphoto',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentsbyuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comments',
            name='dailyphoto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.DailyPhoto'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
